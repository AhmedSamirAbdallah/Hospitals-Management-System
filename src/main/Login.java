/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.ProtocolException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.JSONArray;
import org.json.JSONObject;


/**
 *
 * @author Bisso
 */

public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegisterPage = new javax.swing.JPanel();
        Left = new javax.swing.JPanel();
        iconHospital = new javax.swing.JLabel();
        Right = new javax.swing.JPanel();
        User = new javax.swing.JTextField();
        Pass = new javax.swing.JPasswordField();
        iconEmail = new javax.swing.JLabel();
        iconPassword = new javax.swing.JLabel();
        LoginButton = new javax.swing.JButton();
        iconExit = new javax.swing.JLabel();
        UnsuccessfulRegistration = new javax.swing.JLabel();
        LoginButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Left.setBackground(new java.awt.Color(175, 75, 75));

        iconHospital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/Images/hospital (1).png"))); // NOI18N

        javax.swing.GroupLayout LeftLayout = new javax.swing.GroupLayout(Left);
        Left.setLayout(LeftLayout);
        LeftLayout.setHorizontalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(iconHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        LeftLayout.setVerticalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(iconHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Right.setBackground(new java.awt.Color(255, 255, 255));

        User.setText("Username");
        User.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.red, java.awt.Color.white, java.awt.Color.red, java.awt.Color.white), null)));
        User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserActionPerformed(evt);
            }
        });

        Pass.setText("password");
        Pass.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.red, java.awt.Color.white, java.awt.Color.red, java.awt.Color.white))));

        iconEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/Images/icons8_user_25px.png"))); // NOI18N

        iconPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/Images/icons8_lock_25px.png"))); // NOI18N

        LoginButton.setBackground(new java.awt.Color(175, 75, 75));
        LoginButton.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Login");
        LoginButton.setToolTipText("");
        LoginButton.setBorder(null);
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButtonMouseExited(evt);
            }
        });
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        iconExit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        iconExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/Images/button.png"))); // NOI18N
        iconExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconExitMouseClicked(evt);
            }
        });

        UnsuccessfulRegistration.setBackground(new java.awt.Color(175, 75, 75));

        LoginButton1.setBackground(new java.awt.Color(175, 75, 75));
        LoginButton1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        LoginButton1.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton1.setText("Sign Up");
        LoginButton1.setToolTipText("");
        LoginButton1.setBorder(null);
        LoginButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButton1MouseExited(evt);
            }
        });
        LoginButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RightLayout = new javax.swing.GroupLayout(Right);
        Right.setLayout(RightLayout);
        RightLayout.setHorizontalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RightLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(iconExit))
            .addGroup(RightLayout.createSequentialGroup()
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RightLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(LoginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RightLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UnsuccessfulRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(RightLayout.createSequentialGroup()
                                    .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(iconEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(iconPassword))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Pass, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                        .addComponent(User)))))))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        RightLayout.setVerticalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightLayout.createSequentialGroup()
                .addComponent(iconExit)
                .addGap(58, 58, 58)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(User, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LoginButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85)
                .addComponent(UnsuccessfulRegistration, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout RegisterPageLayout = new javax.swing.GroupLayout(RegisterPage);
        RegisterPage.setLayout(RegisterPageLayout);
        RegisterPageLayout.setHorizontalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPageLayout.createSequentialGroup()
                .addComponent(Left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RegisterPageLayout.setVerticalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegisterPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegisterPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
     boolean VaildUsername(String username){
        for(int i=0;i<username.length();i++)
        {
            if(!Character.isDigit(username.charAt(i))&&
               !Character.isAlphabetic(username.charAt(i))&&
               username.charAt(i)!='@'&&
               username.charAt(i)!='_'&&
               username.charAt(i)!='+'&&
               username.charAt(i)!='-'&&
               username.charAt(i)!='.')return false;
                
        }
        return true;
    }
    ArrayList<Integer>LoginApi(String user , String pass) throws ProtocolException, IOException{
        ArrayList <Integer>info = new ArrayList <Integer>();
        String data = "{\n";
        data+="\t\"username\":"+"\""+user+"\",\n";
        data+="\t\"password\":"+"\""+pass+"\"\n";
        data+="}\n";
        HttpURLConnection connection =(HttpURLConnection)new URL("https://glacial-everglades-74360.herokuapp.com/api/auth/login?format=json").openConnection();
        connection.setRequestProperty("Content-Type","application/json");  
        connection.setDoOutput(true);
        connection.setDoInput(true);
        connection.setRequestMethod("POST");
        OutputStream we = connection.getOutputStream();
        we.write(data.getBytes());
        int respondeCode=connection.getResponseCode();
        System.out.println(data);
        System.out.println("The POST Request Response Code :  " + respondeCode);  
        System.out.println("The POST Request Response Message : " + connection.getResponseMessage());
        String read="";
        InputStreamReader isrObj = new InputStreamReader(connection.getInputStream());  
        BufferedReader bf = new BufferedReader(isrObj);  
        StringBuffer responseStr = new StringBuffer();  
        while ((read = bf .readLine()) != null)  
        {  
            responseStr.append(read); 
        } 
        connection.disconnect();
        we.close();
        bf.close(); 
        System.out.println(responseStr);
        info.add(respondeCode);
        JSONObject obj = new JSONObject(responseStr.toString());
        int id = obj.getJSONObject("user").getInt("hospital_id");
        info.add(id);
        
       
        return info;
    }
    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        try {
            // TODO add your handling code here:
            ArrayList<Integer> info;
            String email = User.getText();
            String password = Pass.getText();
            if(email.length()>150)
            {
                UnsuccessfulRegistration.setText("Username Can't be more than 150 Characters");
            }
            else if(!VaildUsername(email))
            {
                UnsuccessfulRegistration.setText("Please enter a Valid Username");
            }
            else if(email.isEmpty())
            {
                UnsuccessfulRegistration.setText("Username Can't be Empty");
            }
            else if(password.isEmpty())
            {
                UnsuccessfulRegistration.setText("Passowrd Can't be Empty");
                
            }
            else 
            {
                info = LoginApi(email,password);
                if(info.get(0)==200)
                {
                    dispose();
                    Home s = new Home(email,info.get(1));
                    s.setVisible(true);
                }
            else 
                {
                    UnsuccessfulRegistration.setText("Unsuccessful Registration");
                }
            }
            
        } catch (IOException ex) {
            UnsuccessfulRegistration.setText("Unsuccessful Registration");
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void iconExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconExitMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_iconExitMouseClicked

    private void LoginButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButton1ActionPerformed
        // TODO add your handling code here:
        SignUp user = new SignUp();
        user.setVisible(rootPaneCheckingEnabled);
        
    }//GEN-LAST:event_LoginButton1ActionPerformed

    private void LoginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseEntered
        // TODO add your handling code here:
        LoginButton.setBackground(new Color(150,50,50));
    }//GEN-LAST:event_LoginButtonMouseEntered

    private void LoginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseExited
        // TODO add your handling code here:
        LoginButton.setBackground(new Color(175,75,75));
        
    }//GEN-LAST:event_LoginButtonMouseExited

    private void LoginButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButton1MouseEntered
        // TODO add your handling code here:
        LoginButton1.setBackground(new Color(150,50,50));
    }//GEN-LAST:event_LoginButton1MouseEntered

    private void LoginButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButton1MouseExited
        // TODO add your handling code here:
        LoginButton1.setBackground(new Color(175,75,75));
    }//GEN-LAST:event_LoginButton1MouseExited

    private void UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Login().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Left;
    private javax.swing.JButton LoginButton;
    private javax.swing.JButton LoginButton1;
    private javax.swing.JPasswordField Pass;
    private javax.swing.JPanel RegisterPage;
    private javax.swing.JPanel Right;
    private javax.swing.JLabel UnsuccessfulRegistration;
    private javax.swing.JTextField User;
    private javax.swing.JLabel iconEmail;
    private javax.swing.JLabel iconExit;
    private javax.swing.JLabel iconHospital;
    private javax.swing.JLabel iconPassword;
    // End of variables declaration//GEN-END:variables
}
